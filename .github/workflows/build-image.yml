name: Build docker image
on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      imagename:
        required: true
        type: string
      ENV:
        required: true
        type: string
      ADMIN_ORIGIN:
        required: true
        type: string
      APP_ORIGIN:
        required: true
        type: string
      REVALIDATOR_PROXY_ORIGIN:
        required: true
        type: string
      DECORATOR_URL:
        required: true
        type: string
      XP_ORIGIN:
        required: true
        type: string
      INNLOGGINGSSTATUS_URL:
        required: true
        type: string
      NAVNO_API_URL:
        required: true
        type: string
      FAILOVER_ORIGIN:
        required: true
        type: string
      RELEASE_TAG:
        required: false
        type: string
      IS_FAILOVER_INSTANCE:
        required: false
        type: boolean
      IS_EDITOR_ONLY:
        required: false
        type: boolean
    secrets:
      READER_TOKEN:
        required: true
      SENTRY_AUTH_TOKEN:
        required: true
      SERVICE_SECRET:
        required: false
    outputs:
      image:
        description: "Url to docker image"
        value: ${{ jobs.build_image.outputs.image }}

jobs:
  build_image:
    name: Build docker image
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      image: ghcr.io/${{ github.repository }}:${{ inputs.imagename }}-${{ github.sha }}
    outputs:
      image: ${{ env.image }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://npm.pkg.github.com'
          cache: 'npm'
      - name: Set app environmment
        run: |
          cat > .env <<EOF
          ENV=${{ inputs.ENV }}
          NODE_ENV=production
          ADMIN_ORIGIN=${{ inputs.ADMIN_ORIGIN }}
          APP_ORIGIN=${{ inputs.APP_ORIGIN }}
          DECORATOR_URL=${{ inputs.DECORATOR_URL }}
          XP_ORIGIN=${{ inputs.XP_ORIGIN }}
          REVALIDATOR_PROXY_ORIGIN=${{ inputs.REVALIDATOR_PROXY_ORIGIN }}
          FAILOVER_ORIGIN=${{ inputs.FAILOVER_ORIGIN }}
          IS_FAILOVER_INSTANCE=${{ inputs.IS_FAILOVER_INSTANCE }}
          INNLOGGINGSSTATUS_URL=${{ inputs.INNLOGGINGSSTATUS_URL }}
          NAVNO_API_URL=${{ inputs.NAVNO_API_URL }}
          PAGE_CACHE_DIR=/tmp/pages
          IMAGE_CACHE_DIR=/tmp/images
          SENTRY_DSN=https://7d6de132401448989071436f6e54c748@sentry.gc.nav.no/131
          EOF
      - name: Nextjs cache
        uses: actions/cache@v3
        with:
          path: ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}
      - name: Run server tests
        run: npm run test-server
      - name: Run client tests
        run: npm run test-client
      - name: Build application
        run: npm run build
        env:
          SERVICE_SECRET: ${{ secrets.SERVICE_SECRET }}
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
      - name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push docker image
        run: |
          docker build -t ${{ env.image }} .
          docker push ${{ env.image }}
