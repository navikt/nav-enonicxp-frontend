@forward '@navikt/ds-tokens/dist/tokens';
@use '@navikt/ds-tokens/dist/tokens' as *;
@use 'sass:math';

$pixel-size-rem: math.div(1, 16);

@function withUnit($value, $unit) {
    @return '#{$value}#{$unit}';
}

@function px-to-rem($px) {
    @return withUnit($px * $pixel-size-rem, 'rem');
}

// Screen size breakpoints
$mobileMaxWidth: 48rem; // 768px
$tabletMinWidth: $mobileMaxWidth;
$tabletMaxWidth: 64rem; // 1024px
$desktopMinWidth: $tabletMaxWidth;
$desktopMaxWidth: 90rem; // 1440px

$mq-screen-mobile: 'only screen and (max-width: #{$mobileMaxWidth})';
$mq-screen-tablet: 'only screen and (min-width: #{$tabletMinWidth}) and (max-width: #{$tabletMaxWidth})';
$mq-screen-tablet-and-desktop: 'only screen and (min-width: #{$tabletMinWidth}) ';
$mq-screen-desktop: 'only screen and (min-width: #{$desktopMinWidth}) ';
$mq-screen-desktop-large: 'only screen and (min-width: #{$desktopMaxWidth}) ';

// Max-width for SituationPage & Layouts
$contentMaxWidth: px-to-rem(900);
$sectionMaxWidth: calc(#{$contentMaxWidth} * 2/3);

$padding-sides-desktop: 3rem;
$padding-sides-tablet: 1rem;
$padding-sides-mobile: 0.5rem;

$sectionPaddingDesktop: 2.5rem;
$sectionPaddingTablet: 1.6rem;
$sectionPaddingMobile: 1rem;
$border-radius-small: 2px;
$border-radius-base: 4px;
$border-radius-large: 6px;

// Varaibles for CMS-editor
$editorPaddingVertical: 2rem;
$editorPaddingHorizontal: $editorPaddingVertical * 1.62;

// Makes the element cover the entire screen-width
@mixin full-width-mixin() {
    $side-width: calc((100vw - 100%) / 2);
    $side-width-negative: calc((100vw - 100%) / -2);

    padding-left: $side-width;
    padding-right: $side-width;
    margin-left: $side-width-negative;
    margin-right: $side-width-negative;
}

@mixin flex-cols-mixin($numCols, $marginX: 1.5rem, $marginY: 1.5rem) {
    & > * {
        $numColsPlus1: $numCols + 1;
        display: flex;
        flex-grow: 1;
        flex-shrink: 0;
        flex-basis: calc(percentage(1 / ($numCols + 1)) + 1px);

        max-width: calc(
                percentage(1 / $numCols) - #{($marginX * ($numCols - 1)) / $numCols} +
                1px
        );

        &:not(:last-child) {
            margin-right: $marginX;
        }

        &:nth-child(#{($numCols)n + $numCols}) {
        margin-right: 0;
    }

        &:nth-child(#{n + $numColsPlus1}) {
        margin-top: $marginY;
    }
    }
}

@mixin panel-focus-mixin($inset: true) {
    outline: unset;
    box-shadow: 0 0 0 3px if($inset, inset, null) $navds-semantic-color-focus;
}

@mixin link-border-bottom-mixin($underlineDefault: true) {
    @if $underlineDefault {
        border-bottom: 1px $navds-semantic-color-link solid;
    } @else {
        border-bottom-color: transparent;
    }

    text-decoration: none;
    transition: border-bottom-color 0.12s ease-out;

    &:hover,
    &:focus {
        @if $underlineDefault {
            border-bottom-color: transparent;
        } @else {
            border-bottom: 1px $navds-semantic-color-link solid;
        }
    }
}

// This is an override mixin specific for product and livesituation pages.
// To be removed when DS has updated design packages.
@mixin product-mixins() {
    // h3 signifies a new "sub chapter" within a section.
    // should have extra spacing above content, but only if
    // not the topmost element within region. Except first-child.
    :global {
        .part {
            .html-area,
            &__dynamic-header {
                h3 {
                    margin-top: 2.75rem;
                }
            }
        }
    }

    :global {
        .region__content {
            > :first-child {
                h3:first-child {
                    margin-top: 0;
                }
            }
        }
    }

    // The very last child of the very last part or fragment
    // within a region__content should not have margin-bottom.
    // Reason for select all (">"): fragments are inserted without a class,
    // so just select any child that may contain any of the elements.
    :global {
        .region__content {
            > :last-child {
                .card:last-child,
                .calculator,
                ul:last-child,
                p:last-child {
                    margin-bottom: 0;
                }
            }
        }
    }
}
