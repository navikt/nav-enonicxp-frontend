@forward '@navikt/ds-tokens/dist/tokens';
@use '@navikt/ds-tokens/dist/tokens' as *;
@use 'sass:math';

$pixel-size-rem: math.div(1, 16);

// Screen size breakpoints
$mobileMaxWidth: 48rem; // 768px
$tabletMinWidth: $mobileMaxWidth;
$tabletMaxWidth: 64rem; // 1024px
$desktopMinWidth: $tabletMaxWidth;
$desktopMaxWidth: 90rem; // 1440px

$mq-screen-mobile: 'only screen and (max-width: #{$mobileMaxWidth})';
$mq-screen-tablet: 'only screen and (min-width: #{$tabletMinWidth}) and (max-width: #{$tabletMaxWidth})';
$mq-screen-tablet-and-desktop: 'only screen and (min-width: #{$tabletMinWidth}) ';
$mq-screen-desktop: 'only screen and (min-width: #{$desktopMinWidth}) ';
$mq-screen-desktop-large: 'only screen and (min-width: #{$desktopMaxWidth}) ';

$padding-sides-desktop: 3rem;
$padding-sides-tablet: 1rem;
$padding-sides-mobile: 0.5rem;

$sectionPaddingDesktop: 2.5rem;
$sectionPaddingTablet: 1.6rem;
$sectionPaddingMobile: 1rem;
$border-radius-small: 2px;
$border-radius-base: 4px;
$border-radius-large: 6px;

// Makes the element cover the entire screen-width
@mixin full-width-mixin() {
    $side-width: calc((100vw - 100%) / 2);
    $side-width-negative: calc((100vw - 100%) / -2);

    padding-left: $side-width;
    padding-right: $side-width;
    margin-left: $side-width-negative;
    margin-right: $side-width-negative;
}

@mixin panel-focus-mixin($inset: true) {
    outline: unset;
    box-shadow: 0 0 0 3px if($inset, inset, null) $navds-semantic-color-focus;
}
