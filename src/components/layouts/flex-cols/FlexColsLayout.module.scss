@use 'common' as common;

@mixin contactBackground() {
    padding-bottom: 4rem;
    background-color: var(
        --a-gray-50
    ) !important; // To override inline colors set in XP (to be changed in the future)
    --size: 6px;
    --p: 3px;
    --R: 6px;
    mask:
        radial-gradient(var(--R) at left 50% top calc(var(--size) + var(--p)), #000 99%, #0000 101%)
            calc(50% - 2 * var(--size)) 0 / calc(4 * var(--size)) 100%,
        radial-gradient(var(--R) at left 50% top calc(-1 * var(--p)), #0000 99%, #000 101%) left 50%
            top var(--size) / calc(4 * var(--size)) 100% repeat-x;
}

.flexCols {
    &:last-child {
        padding-bottom: 4rem;
    }

    :global(.region__flexcols) {
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: stretch;
        width: 100%;

        @include common.content-studio-drop-zone-fix-global();
    }

    :global(.region__flexcols--1-cols) {
        @include common.flex-cols-mixin(1);
    }

    :global(.region__flexcols--2-cols) {
        @include common.flex-cols-mixin(2, 2rem);

        @media #{common.$mq-screen-mobile} {
            @include common.flex-cols-mixin(1);
        }
    }

    :global(.region__flexcols--3-cols) {
        @media #{common.$mq-screen-desktop} {
            @include common.flex-cols-mixin(3, 2rem);
        }

        @media #{common.$mq-screen-tablet} {
            @include common.flex-cols-mixin(2);
        }

        @media #{common.$mq-screen-mobile} {
            @include common.flex-cols-mixin(1);
        }
    }
}

.header {
    margin-bottom: 2.5rem;
}

.layoutSituationOrProduct {
    $singleColMaxWidth: calc(#{common.$sectionMaxWidth} + 2 * #{common.$padding-sides-mobile});
    $doubleColMaxWidth: calc(#{common.$contentMaxWidth} + 2 * #{common.$padding-sides-tablet});

    @include common.full-width-mixin();

    padding-top: 4rem;
    padding-bottom: 4rem;
    margin-top: 4rem;

    &:has(:global(.part__contact-option)) {
        @include contactBackground();
        padding-top: 5rem;

        .contentWrapper {
            $margin: clamp(-300px, calc((800px - 100vw) / 2), 0px);
            margin: 0 $margin;
        }
    }

    :global(.region__flexcols.region__flexcols) {
        //Double class to increase specificity, to avoid media query being overridden
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        align-items: stretch;
        width: 100%;

        @include common.content-studio-drop-zone-fix-global();

        @media #{'only screen and (max-width: #{$singleColMaxWidth})'} {
            @include common.flex-cols-mixin(1);
        }
    }

    :global(.region__flexcols--1-cols) {
        @include common.flex-cols-mixin(1);
    }

    :global(.region__flexcols--2-cols) {
        @include common.flex-cols-mixin(2);
    }

    :global(.region__flexcols--3-cols) {
        @include common.flex-cols-mixin(3);

        @media #{'only screen and (max-width: #{$doubleColMaxWidth})'} {
            @include common.flex-cols-mixin(2);
        }
    }
}

.layoutSituation {
    background-color: rgb(254 245 239); // Finnes pr nå ikke i Aksel.
}

.layoutSituationShelf {
    // TODO rydd i litt hacky midlertidig løsning, bruker samme metode som full-width-mixin, men med 70vw istedenfor 100vw. (tenker det kan gjøres etter lansering)
    padding-left: calc((70vw - 100%) / 2);
    padding-right: calc((70vw - 100%) / 2);

    padding-top: 3rem;
    padding-bottom: 3rem;
}

.shelfHeader {
    color: rgb(153, 24, 94); // Finnes pr nå ikke i Aksel.
    margin-bottom: 2rem;
    padding-left: 1.5rem;
    padding-right: 1.5rem;
    text-align: center;
    text-wrap: balance;
}

.shelfLayout {
    --gap: 2px;
    --line-offset: calc(var(--gap) / 2);
    --line-thickness: 1px;
    --line-color: rgb(203 213 225);

    display: grid !important;
    overflow: hidden;
    gap: var(--gap);

    @media #{common.$mq-screen-tablet-and-desktop} {
        grid-template-columns: repeat(2, minmax(0, 1fr));
    }

    > * {
        margin: 0 !important; //overstyr nth-child margin fra generell flexcols
    }
}
