@import '~nav-frontend-core/less/_variabler';
@import '~nav-frontend-core/less/core';
@import '~@navikt/ds-css/dist/index.css';

@pixel-size-rem: 1 / 16;
@regular-font-size: 1.125rem;

// Screen size breakpoints
@mobileMaxWidth: 48rem; // 768px
@tabletMinWidth: @mobileMaxWidth;
@tabletMaxWidth: 64rem; // 1024px
@desktopMinWidth: @tabletMaxWidth;
@desktopMaxWidth: 90rem; // 1440px

@mq-screen-mobile: ~'only screen and (max-width: @{mobileMaxWidth})';
@mq-screen-tablet: ~'only screen and (min-width: @{tabletMinWidth}) and (max-width: @{tabletMaxWidth})';
@mq-screen-tablet-and-desktop: ~'only screen and (min-width: @{tabletMinWidth}) ';
@mq-screen-desktop: ~'only screen and (min-width: @{desktopMinWidth}) ';
@mq-screen-desktop-large: ~'only screen and (min-width: @{desktopMaxWidth}) ';

@padding-sides-desktop: 3rem;
@padding-sides-tablet: 1rem;
@padding-sides-mobile: 0.5rem;

@sectionPaddingDesktop: 2.8rem;
@sectionPaddingTablet: 1.6rem;
@sectionPaddingMobile: 1rem;

html {
    // override ds-css scroll behaviour
    animation: none;
    scroll-behavior: auto;
    &:focus-within {
        animation: none;
        scroll-behavior: auto;
    }
}

#__next,
.decorator-utils-container {
    background-color: @navGraBakgrunn;
}

.decorator-utils-container {
    min-height: 4rem;
    margin-bottom: -4rem;
}

.app-container {
    max-width: @desktopMaxWidth;
    min-height: 22.5rem;
    margin: 0 auto;
    font-size: var(--navds-front-size-l);
    line-height: var(--navds-font-line-height-m);

    @media @mq-screen-mobile {
        padding: 0 @padding-sides-mobile 2rem @padding-sides-mobile;
    }

    @media @mq-screen-tablet {
        padding: 0 @padding-sides-tablet 2rem @padding-sides-tablet;
    }

    @media @mq-screen-desktop {
        padding: 0 @padding-sides-desktop 2rem @padding-sides-desktop;
    }
}

.content-wrapper {
    &:focus {
        outline: none;
        box-shadow: none;
    }
}

#decorator-header {
    min-height: 88px;

    @media @mq-screen-tablet-and-desktop {
        min-height: 106px;
        &.with-context {
            min-height: 150px;
        }
    }
}

@media print {
    .decorator-wrapper {
        display: none;
    }
}

.hidden {
    display: none;
}

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
}

// Rounds a rem-value to the nearest value which is divisible by
// the current pixel size, taking global font-size into account
// This is useful for cases where 1px rounding-errors are noticable
#round-rem(@value: 0) {
    @valueUpper: @value + @pixel-size-rem / 2;
    @result: @valueUpper - mod(@valueUpper, @pixel-size-rem);
}

#px-to-rem(@px) {
    @rem: unit(@px * @pixel-size-rem, rem);
}

// Makes the element cover the entire screen-width
.full-width-mixin() {
    @side-width: calc((100vw - 100%) / 2);
    @side-width-negative: calc((100vw - 100%) / -2);

    padding-left: @side-width;
    padding-right: @side-width;
    margin-left: @side-width-negative;
    margin-right: @side-width-negative;
}

.panel-inset-focus-mixin() {
    outline: 0;
    box-shadow: 0 0 0 3px inset @fokusFarge;
}

.section-padding-mixin() {
    padding: @sectionPaddingDesktop;

    @media @mq-screen-tablet {
        padding: @sectionPaddingTablet;
    }

    @media @mq-screen-mobile {
        padding: @sectionPaddingMobile;
    }
}

.link-border-bottom-mixin() {
    border-bottom: 1px @navBla solid;
    text-decoration: none;
    transition: border-bottom-color 0.12s ease-out;

    &:hover,
    &:focus {
        border-bottom-color: transparent;
    }
}
